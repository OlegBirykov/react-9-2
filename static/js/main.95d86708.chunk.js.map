{"version":3,"sources":["AppContext.js","AppProvider.js","img/post-top.jpg","img/post-bottom.jpg","components/Post.js","utils/time.js","utils/http.js","img/comment.jpg","components/PostsList.js","img/newpost.jpg","components/NewPost.js","components/ViewPost.js","img/editpost.jpg","components/EditPost.js","components/Fetch.js","App.js","index.js"],"names":["AppContext","createContext","data","waiting","error","AppProvider","props","useState","setData","setWaiting","setError","Provider","value","children","Post","content","created","ago","setAgo","timer","newAgo","timeCreated","moment","now","isValid","minutes","diff","hours","days","timeToAgo","useEffect","timerId","setInterval","clearInterval","className","src","post_top","width","alt","post_bottom","request","url","options","a","result","fetch","response","ok","Error","statusText","json","message","PostsList","useContext","process","fetchData","to","map","id","comment","pathname","state","isEdit","NewPost","text","setText","addPost","event","preventDefault","method","headers","body","JSON","stringify","document","location","href","target","newpost","type","name","placeholder","required","onChange","onClick","ViewPost","match","params","post","length","find","item","deletePost","EditPost","redirect","setRedirect","linkto","savePost","editpost","Fetch","App","path","component","render","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.95d86708.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst AppContext = createContext({\n  data: [],\n  waiting: false,\n  error: ''\n});\n\nexport default AppContext;\n","import { useState } from 'react';\nimport AppContext from './AppContext';\n\nfunction AppProvider(props) {\n  const [data, setData] = useState([]);\n  const [waiting, setWaiting] = useState(false);\n  const [error, setError] = useState('');\n  \n  return (\n    <AppContext.Provider value={{ data, waiting, error, setData, setWaiting, setError }}>\n      {props.children}  \n    </AppContext.Provider>\n  )\n}\n\nexport default AppProvider;\n\n","export default __webpack_public_path__ + \"static/media/post-top.20e1f623.jpg\";","export default __webpack_public_path__ + \"static/media/post-bottom.4dd3d138.jpg\";","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { timeToAgo } from '../utils/time';\nimport post_top from '../img/post-top.jpg';\nimport post_bottom from '../img/post-bottom.jpg';\n\nfunction Post(props) {\n  const { content, created } = props;\n  const [ago, setAgo] = useState('');\n  \n  const timer = () => {\n    const newAgo = timeToAgo(created);\n    if (newAgo !== ago) {\n      setAgo(newAgo);\n    }\n  }\n\n  useEffect(() => {\n    timer();\n    const timerId = setInterval(timer, 5000);\n    return () => clearInterval(timerId);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n    \n  return (\n    <div className=\"Post\">\n      <img className=\"Post-image-top\" src={post_top} width=\"100%\" alt=\"no load\" />\n      <p className=\"Post-ago\">{ago}</p>\n      <p className=\"Post-content\">{content}</p>\n      <img className=\"Post-image-bottom\" src={post_bottom} width=\"100%\" alt=\"no load\" />\n      {props.children}  \n    </div>\n  )\n}\n\nPost.propTypes = {\n  content: PropTypes.string.isRequired,\n  created: PropTypes.number.isRequired\n};\n\nexport default Post;","import moment from 'moment';\n\nexport function timeToAgo(created) {\n\n  const timeCreated = moment(created);\n  const now = moment();\n\n  if (!timeCreated.isValid()) {\n    return '';\n  }\n\n  const minutes = now.diff(timeCreated, 'minutes');\n  if (minutes < 1) {\n    return 'Только что';\n  }\n  if (minutes < 60) {\n    return minutes + ' мин.';\n  }\n \n  const hours = now.diff(timeCreated, 'hours');\n  if (hours < 24) {\n    return hours + ' ч.';\n  }\n\n  const days = now.diff(timeCreated, 'days');\n  if (days < 30) {\n    return days + ' дн.';\n  }\n\n  const months = now.diff(timeCreated, 'months');\n  return months + ' мес.';\n}\n","export async function request(url, options) {\n  const result = {\n    data: [],\n    error: ''\n  };\n\n  try {\n    const response = await fetch(url, options);\n  \n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n  \n    if (!options) {\n      result.data = await response.json();\n    }         \n  \n  } catch (error) {\n    result.error = error.message ? error.message : 'No Server Response';\n  \n  } finally {\n    return result;\n  }\n}\n","export default __webpack_public_path__ + \"static/media/comment.9fb43a42.jpg\";","import { useEffect, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport AppContext from '../AppContext';\nimport Post from './Post';\nimport { request } from '../utils/http';\nimport comment from '../img/comment.jpg';\n\nfunction PostsList() {\n  const { data, setData, setWaiting, setError } = useContext(AppContext);\n  \n  useEffect(() => {\n    async function fetchData() {\n      setWaiting(true);\n      const response = await request(process.env.REACT_APP_SERVER);\n      setError(response.error);  \n      setData(response.data); \n      setWaiting(false);\n    }\n\n    fetchData();\n  }, [setData, setError, setWaiting]);\n\n  return (\n    <div className=\"PostsList\">\n      <div className=\"PostsList-new\">\n        <Link to={process.env.PUBLIC_URL + '/posts/new'} className=\"PostsList-new-button\">\n          Создать пост\n        </Link>\n      </div>\n      {data.map(({ id, content, created }) => (\n        <Post key={id} content={content} created={created}>\n          <img className=\"PostsList-comment-image\" src={comment} width=\"100%\" alt=\"no load\" /> \n          <Link \n            to={{\n              pathname: process.env.PUBLIC_URL + '/posts/' + id,\n              state: { isEdit: false }\n            }} \n            className=\"PostsList-post-button\"\n          >\n            &#x02EC;\n          </Link>           \n        </Post>\n      ))}\n    </div>\n  );\n}\n\nexport default PostsList;","export default __webpack_public_path__ + \"static/media/newpost.d8711a45.jpg\";","import { useState, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport AppContext from '../AppContext';\nimport { request } from '../utils/http';\nimport newpost from '../img/newpost.jpg';\n\nfunction NewPost() {\n  const [text, setText] = useState('');    \n  const { setWaiting, setError } = useContext(AppContext);\n  \n  const changeText = event => {\n    setText(event.target.value);\n  }\n  \n  const addPost = async (event) => {\n    event.preventDefault();\n\n    if (!text) {\n      return;\n    }\n    \n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json;charset=utf-8'\n      },\n      body: JSON.stringify({\n        id: 0,\n        content: text\n      })\n    };\n    \n    setWaiting(true);\n    const response = await request(process.env.REACT_APP_SERVER, options);\n    setError(response.error);  \n\n    document.location.href = event.target.href;\n  }\n  \n  return (\n    <div className=\"NewPost\">\n      <img className=\"NewPost-image\" src={newpost} width=\"100%\" alt=\"no load\" />\n      <Link to={process.env.PUBLIC_URL} className=\"NewPost-close\"> \n        &#x274C;\n      </Link> \n      <input \n        className=\"NewPost-input\" \n        type=\"text\" \n        name=\"text\" \n        value={text}\n        placeholder=\"Текст поста (обязательно для заполнения)\"\n        required\n        onChange={changeText} />\n      <div className=\"NewPost-post\">\n        <Link to={process.env.PUBLIC_URL} className=\"NewPost-post-button\" onClick={addPost}>\n          Опубликовать\n        </Link>\n      </div>\n    </div>\n  );\n}\n\nexport default NewPost;\n","import { useContext } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport AppContext from '../AppContext';\nimport Post from './Post';\nimport { request } from '../utils/http';\n\nfunction ViewPost(props) {\n  const { id } = props.match.params;\n  const { data, setWaiting, setError } = useContext(AppContext);\n  const post = data.length && data.find(item => item.id === +id);\n\n  if (!post) {\n    return <Redirect to={process.env.PUBLIC_URL} />\n  }\n\n  const deletePost = async (event) => {\n    event.preventDefault();\n\n    const options = {\n      method: 'DELETE'\n    };\n    \n    setWaiting(true);\n    const response = await request(process.env.REACT_APP_SERVER + '/' + id, options);\n    setError(response.error);  \n\n    document.location.href = event.target.href;\n  }\n    \n  return (\n    <div className=\"ViewPost\">\n      <Post content={post.content} created={post.created}>\n        <Link to={process.env.PUBLIC_URL} className=\"ViewPost-close\"> \n          &#x274C;\n        </Link>\n        <div className=\"ViewPost-modify\">\n          <Link \n            to={{\n              pathname: process.env.PUBLIC_URL + '/posts/' + id,\n              state: { isEdit: true }\n            }} \n            className=\"ViewPost-edit\"\n          >\n            Изменить\n          </Link>\n          <Link to={process.env.PUBLIC_URL} className=\"ViewPost-delete\" onClick={deletePost}>\n            Удалить\n          </Link>\n        </div>   \n      </Post>\n    </div>\n  );\n}\n\nexport default ViewPost;\n","export default __webpack_public_path__ + \"static/media/editpost.4f8059c9.jpg\";","import { useState, useContext } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport AppContext from '../AppContext';\nimport { request } from '../utils/http';\nimport editpost from '../img/editpost.jpg';\n\nfunction EditPost(props) {\n  const { id } = props.match.params;   \n  const { data, setData, setWaiting, setError } = useContext(AppContext);\n  const post = data.length ? data.find(item => item.id === +id) : { content: '' }\n  const [text, setText] = useState(post.content);\n  const [redirect, setRedirect] = useState(false);\n\n  if (!post.content) {\n    return <Redirect to={process.env.PUBLIC_URL} />\n  }\n  \n  const linkto = {\n    pathname: process.env.PUBLIC_URL + '/posts/' + id,\n    state: { isEdit: false }\n  }; \n  \n  const changeText = event => {\n    setText(event.target.value);\n  }\n\n  const savePost = async (event) => {\n    event.preventDefault();\n\n    if (!text) {\n      return;\n    }\n    \n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json;charset=utf-8'\n      },\n      body: JSON.stringify({\n        id: +id,\n        content: text\n      })\n    };\n    \n    setWaiting(true);\n    let response = await request(process.env.REACT_APP_SERVER, options);\n    setError(response.error);  \n    response = await request(process.env.REACT_APP_SERVER);\n    setError(response.error); \n    setData(response.data);\n    setWaiting(false);\n\n    setRedirect(true);\n  }\n\n  return (\n    <div className=\"EditPost\">\n      <img className=\"EditPost-image\" src={editpost} width=\"100%\" alt=\"no load\" />\n      <Link to={linkto} className=\"EditPost-close\"> \n        &#x274C;\n      </Link> \n      <input \n        className=\"EditPost-input\" \n        type=\"text\" \n        name=\"text\" \n        value={text}\n        placeholder=\"Текст поста (обязательно для заполнения)\"\n        required\n        onChange={changeText} />\n      <div className=\"EditPost-save\">\n        <Link to={linkto} className=\"EditPost-save-button\" onClick={savePost}>\n          Сохранить\n        </Link>\n      </div>\n      {redirect && <Redirect to={linkto} />}\n    </div>\n  );\n}\n\nexport default EditPost;","import { useContext } from 'react';\nimport AppContext from '../AppContext';\n\nfunction Fetch() {\n  const { waiting, error } = useContext(AppContext);  \n\n  if (waiting) {\n    return (\n      <div className=\"Fetch-waiting\">\n        <p className=\"Fetch-waiting-text\">Waiting...</p>\n      </div>\n    );     \n  } else if (error) {\n    return (\n      <div className=\"Fetch-error\">\n        <p className=\"Fetch-error-text\">{error}</p>\n      </div>\n    );    \n  } else {\n    return null;\n  }\n};\n\nexport default Fetch;","import { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport AppProvider from './AppProvider';\nimport PostsList from './components/PostsList';\nimport NewPost from './components/NewPost';\nimport ViewPost from './components/ViewPost';\nimport EditPost from './components/EditPost';\nimport Fetch from './components/Fetch';\n\nfunction App() {    \n  return (\n    <AppProvider>\n      <Router>\n        <div className=\"App\">\n          <Switch>\n            <Route path={process.env.PUBLIC_URL + '/posts/new'} component={NewPost} />\n            <Route \n              path={process.env.PUBLIC_URL + '/posts/:id([0-9]+)'} \n              render={({ location, match }) => location.state.isEdit ? <EditPost match={match} /> : <ViewPost match={match} />}\n            /> \n            <Route path={process.env.PUBLIC_URL} component={PostsList} />\n          </Switch> \n          <Fetch />\n        </div>\n      </Router>\n    </AppProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}